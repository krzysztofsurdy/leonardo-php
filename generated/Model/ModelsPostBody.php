<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\LeonardoAI\Generated\Model;

class ModelsPostBody extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The name of the model.
     *
     * @var string
     */
    protected $name;
    /**
     * The description of the model.
     *
     * @var string|null
     */
    protected $description = '';
    /**
     * The ID of the dataset to train the model on.
     *
     * @var string
     */
    protected $datasetId;
    /**
     * The instance prompt to use during training.
     *
     * @var string
     */
    protected $instancePrompt;
    /**
     * The category the most accurately reflects the model.
     *
     * @var string
     */
    protected $modelType = 'GENERAL';
    /**
     * Whether or not the model is NSFW.
     *
     * @var bool|null
     */
    protected $nsfw = false;
    /**
     * The resolution for training. Must be 512 or 768.
     *
     * @var int|null
     */
    protected $resolution = 512;
    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models.
     *
     * @var string
     */
    protected $sdVersion;
    /**
     * When training using the PIXEL_ART model type, this influences the training strength.
     *
     * @var string
     */
    protected $strength = 'MEDIUM';

    /**
     * The name of the model.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * The name of the model.
     */
    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * The description of the model.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * The description of the model.
     */
    public function setDescription(?string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * The ID of the dataset to train the model on.
     */
    public function getDatasetId(): string
    {
        return $this->datasetId;
    }

    /**
     * The ID of the dataset to train the model on.
     */
    public function setDatasetId(string $datasetId): self
    {
        $this->initialized['datasetId'] = true;
        $this->datasetId = $datasetId;

        return $this;
    }

    /**
     * The instance prompt to use during training.
     */
    public function getInstancePrompt(): string
    {
        return $this->instancePrompt;
    }

    /**
     * The instance prompt to use during training.
     */
    public function setInstancePrompt(string $instancePrompt): self
    {
        $this->initialized['instancePrompt'] = true;
        $this->instancePrompt = $instancePrompt;

        return $this;
    }

    /**
     * The category the most accurately reflects the model.
     */
    public function getModelType(): string
    {
        return $this->modelType;
    }

    /**
     * The category the most accurately reflects the model.
     */
    public function setModelType(string $modelType): self
    {
        $this->initialized['modelType'] = true;
        $this->modelType = $modelType;

        return $this;
    }

    /**
     * Whether or not the model is NSFW.
     */
    public function getNsfw(): ?bool
    {
        return $this->nsfw;
    }

    /**
     * Whether or not the model is NSFW.
     */
    public function setNsfw(?bool $nsfw): self
    {
        $this->initialized['nsfw'] = true;
        $this->nsfw = $nsfw;

        return $this;
    }

    /**
     * The resolution for training. Must be 512 or 768.
     */
    public function getResolution(): ?int
    {
        return $this->resolution;
    }

    /**
     * The resolution for training. Must be 512 or 768.
     */
    public function setResolution(?int $resolution): self
    {
        $this->initialized['resolution'] = true;
        $this->resolution = $resolution;

        return $this;
    }

    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models.
     */
    public function getSdVersion(): string
    {
        return $this->sdVersion;
    }

    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models.
     */
    public function setSdVersion(string $sdVersion): self
    {
        $this->initialized['sdVersion'] = true;
        $this->sdVersion = $sdVersion;

        return $this;
    }

    /**
     * When training using the PIXEL_ART model type, this influences the training strength.
     */
    public function getStrength(): string
    {
        return $this->strength;
    }

    /**
     * When training using the PIXEL_ART model type, this influences the training strength.
     */
    public function setStrength(string $strength): self
    {
        $this->initialized['strength'] = true;
        $this->strength = $strength;

        return $this;
    }
}
