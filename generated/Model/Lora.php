<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\LeonardoAI\Generated\Model;

class Lora extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Unique identifier for the element. Elements can be found from the List Elements endpoint.
     *
     * @var string|null
     */
    protected $akUUID;
    /**
     * Name of the creator of the element.
     *
     * @var string|null
     */
    protected $creatorName;
    /**
     * Name of the element.
     *
     * @var string|null
     */
    protected $name;
    /**
     * Description for the element.
     *
     * @var string|null
     */
    protected $description;
    /**
     * URL of the element image.
     *
     * @var string|null
     */
    protected $urlImage;
    /**
     * Base model version for the element.
     *
     * @var string|null
     */
    protected $baseModel;
    /**
     * Default weight for the element.
     *
     * @var int|null
     */
    protected $weightDefault;
    /**
     * Minimum weight for the element.
     *
     * @var int|null
     */
    protected $weightMin;
    /**
     * Maximum weight for the element.
     *
     * @var int|null
     */
    protected $weightMax;
    /**
     * Type name for introspection purposes.
     *
     * @var string
     */
    protected $typename;

    /**
     * Unique identifier for the element. Elements can be found from the List Elements endpoint.
     */
    public function getAkUUID(): ?string
    {
        return $this->akUUID;
    }

    /**
     * Unique identifier for the element. Elements can be found from the List Elements endpoint.
     */
    public function setAkUUID(?string $akUUID): self
    {
        $this->initialized['akUUID'] = true;
        $this->akUUID = $akUUID;

        return $this;
    }

    /**
     * Name of the creator of the element.
     */
    public function getCreatorName(): ?string
    {
        return $this->creatorName;
    }

    /**
     * Name of the creator of the element.
     */
    public function setCreatorName(?string $creatorName): self
    {
        $this->initialized['creatorName'] = true;
        $this->creatorName = $creatorName;

        return $this;
    }

    /**
     * Name of the element.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Name of the element.
     */
    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * Description for the element.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Description for the element.
     */
    public function setDescription(?string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * URL of the element image.
     */
    public function getUrlImage(): ?string
    {
        return $this->urlImage;
    }

    /**
     * URL of the element image.
     */
    public function setUrlImage(?string $urlImage): self
    {
        $this->initialized['urlImage'] = true;
        $this->urlImage = $urlImage;

        return $this;
    }

    /**
     * Base model version for the element.
     */
    public function getBaseModel(): ?string
    {
        return $this->baseModel;
    }

    /**
     * Base model version for the element.
     */
    public function setBaseModel(?string $baseModel): self
    {
        $this->initialized['baseModel'] = true;
        $this->baseModel = $baseModel;

        return $this;
    }

    /**
     * Default weight for the element.
     */
    public function getWeightDefault(): ?int
    {
        return $this->weightDefault;
    }

    /**
     * Default weight for the element.
     */
    public function setWeightDefault(?int $weightDefault): self
    {
        $this->initialized['weightDefault'] = true;
        $this->weightDefault = $weightDefault;

        return $this;
    }

    /**
     * Minimum weight for the element.
     */
    public function getWeightMin(): ?int
    {
        return $this->weightMin;
    }

    /**
     * Minimum weight for the element.
     */
    public function setWeightMin(?int $weightMin): self
    {
        $this->initialized['weightMin'] = true;
        $this->weightMin = $weightMin;

        return $this;
    }

    /**
     * Maximum weight for the element.
     */
    public function getWeightMax(): ?int
    {
        return $this->weightMax;
    }

    /**
     * Maximum weight for the element.
     */
    public function setWeightMax(?int $weightMax): self
    {
        $this->initialized['weightMax'] = true;
        $this->weightMax = $weightMax;

        return $this;
    }

    /**
     * Type name for introspection purposes.
     */
    public function getTypename(): string
    {
        return $this->typename;
    }

    /**
     * Type name for introspection purposes.
     */
    public function setTypename(string $typename): self
    {
        $this->initialized['typename'] = true;
        $this->typename = $typename;

        return $this;
    }
}
