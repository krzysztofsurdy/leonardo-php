<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\LeonardoAI\Generated\Model;

class PricingCalculatorPostBodyServiceParamsLCMGENERATION extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The output height of the image. Must be 512, 640 or 1024.
     *
     * @var int|null
     */
    protected $height;
    /**
     * The output width of the image. Must be 512, 640 or 1024.
     *
     * @var int|null
     */
    protected $width;
    /**
     * Enable for instant upscale.
     *
     * @var bool|null
     */
    protected $instantRefine;
    /**
     * Enable for normal alchemy upscale.
     *
     * @var bool|null
     */
    protected $refine;

    /**
     * The output height of the image. Must be 512, 640 or 1024.
     */
    public function getHeight(): ?int
    {
        return $this->height;
    }

    /**
     * The output height of the image. Must be 512, 640 or 1024.
     */
    public function setHeight(?int $height): self
    {
        $this->initialized['height'] = true;
        $this->height = $height;

        return $this;
    }

    /**
     * The output width of the image. Must be 512, 640 or 1024.
     */
    public function getWidth(): ?int
    {
        return $this->width;
    }

    /**
     * The output width of the image. Must be 512, 640 or 1024.
     */
    public function setWidth(?int $width): self
    {
        $this->initialized['width'] = true;
        $this->width = $width;

        return $this;
    }

    /**
     * Enable for instant upscale.
     */
    public function getInstantRefine(): ?bool
    {
        return $this->instantRefine;
    }

    /**
     * Enable for instant upscale.
     */
    public function setInstantRefine(?bool $instantRefine): self
    {
        $this->initialized['instantRefine'] = true;
        $this->instantRefine = $instantRefine;

        return $this;
    }

    /**
     * Enable for normal alchemy upscale.
     */
    public function getRefine(): ?bool
    {
        return $this->refine;
    }

    /**
     * Enable for normal alchemy upscale.
     */
    public function setRefine(?bool $refine): self
    {
        $this->initialized['refine'] = true;
        $this->refine = $refine;

        return $this;
    }
}
