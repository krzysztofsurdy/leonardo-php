<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\LeonardoAI\Generated\Model;

class PricingCalculatorPostBodyServiceParamsFANTASYAVATARGENERATION extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The input height of the images. Must be between 32 and 1024 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.
     *
     * @var int
     */
    protected $imageHeight;
    /**
     * The input height of the images. Must be between 32 and 1024 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.
     *
     * @var int
     */
    protected $imageWidth;
    /**
     * The number of images to generate. Must be between 1 and 8. If either width or height is over 768, must be between 1 and 4.
     *
     * @var int
     */
    protected $numImages;

    /**
     * The input height of the images. Must be between 32 and 1024 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.
     */
    public function getImageHeight(): int
    {
        return $this->imageHeight;
    }

    /**
     * The input height of the images. Must be between 32 and 1024 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.
     */
    public function setImageHeight(int $imageHeight): self
    {
        $this->initialized['imageHeight'] = true;
        $this->imageHeight = $imageHeight;

        return $this;
    }

    /**
     * The input height of the images. Must be between 32 and 1024 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.
     */
    public function getImageWidth(): int
    {
        return $this->imageWidth;
    }

    /**
     * The input height of the images. Must be between 32 and 1024 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.
     */
    public function setImageWidth(int $imageWidth): self
    {
        $this->initialized['imageWidth'] = true;
        $this->imageWidth = $imageWidth;

        return $this;
    }

    /**
     * The number of images to generate. Must be between 1 and 8. If either width or height is over 768, must be between 1 and 4.
     */
    public function getNumImages(): int
    {
        return $this->numImages;
    }

    /**
     * The number of images to generate. Must be between 1 and 8. If either width or height is over 768, must be between 1 and 4.
     */
    public function setNumImages(int $numImages): self
    {
        $this->initialized['numImages'] = true;
        $this->numImages = $numImages;

        return $this;
    }
}
